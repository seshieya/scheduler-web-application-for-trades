<?php

date_default_timezone_set ("America/Vancouver");

//var_dump($job);
echo '<pre>';
//var_dump($this->post);

var_dump($this->job);
var_dump($this->row);


$startdateInSeconds = strtotime($_POST['sc-startdate']);
$startdate = 0;



//need the below code to calculate weekdays and weekends.
echo date('w', $startdateInSeconds) . '<br>';



$dayIn = 0;
$dayOut = 0;

//$dayInArray = [];
//$dayOutArray = [];

$dayInOutArray = [];

$rowDate['dayIn'] = [];
$rowDate['dayOut'] = [];

//define a number of seconds per day constant:
define("SEC_PER_DAY", 86400);

/*
foreach($_POST as $key => $value) {
    if(preg_match('/^sc-row1-days/', $key)) {
        $daysNeededInt = $value;
        //$dayInInt = 0;
        //$dayOutInt = $dayInInt + ($daysNeededInt - 1);

        $dayInSeconds = $startdateInSeconds;
        $dayInString = date('D M j', $dayInSeconds);
        $dayOutSeconds = (($daysNeededInt - 1) * $secondsPerDay) + $dayInSeconds;
        $dayOutString = date('D M j', $dayOutSeconds);

        //$rowDate['dayIn'][] =

        echo 'row 1:' . $dayInString . '<br>';
        echo $dayOutString . '<br>';

    }

    if(preg_match('/^sc-row([0-9]|[0-9]{2})-days$/', $key)) {
        $daysNeededInt = $value;
        $dayInInt = $dayOutInt + 1;
        $dayOutInt = $dayInInt + ($daysNeededInt - 1);


        $dayInSeconds = $dayOutSeconds + $secondsPerDay;
        $dayOutSeconds = (($daysNeeded - 1 )* $secondsPerDay) + $dayInSeconds;
    }
}
*/

$rowNum = 1;

//CODE TO CALCULATE DAY IN AND DAY OUT IN INTEGERS and push to an array
foreach($_POST as $key => $daysNeeded) {
    if(preg_match('/^sc-row1-days/', $key)) {
        $dayIn = 0; //first day of work
        $dayOut = $dayIn + ($daysNeeded - 1);

        echo 'row ' . $rowNum . ' day in: ' . $dayIn . '<br>';
        echo 'row 1 day out: ' . $dayOut . '<br>';

//        $dayInArray[$rowNum] = $dayIn;
//        $dayOutArray[$rowNum] = $dayOut;

        $dayInOutArray[$rowNum . 'dayIn'] = $dayIn;
        $dayInOutArray[$rowNum . 'dayOut'] = $dayOut;


        $rowNum++;
    }
    else if(preg_match('/^sc-row([0-9]|[0-9]{2})-days$/', $key)) {
        $dayIn = $dayOut + 1;
        $dayOut = $dayIn + ($daysNeeded - 1);

        echo 'row ' . $rowNum . ' day in: ' . $dayIn . '<br>';
        echo 'row ' . $rowNum . ' day out: ' . $dayOut . '<br>';

//        $dayInArray[$rowNum] = $dayIn;
//        $dayOutArray[$rowNum] = $dayOut;

        $dayInOutArray[$rowNum . 'dayIn'] = $dayIn;
        $dayInOutArray[$rowNum . 'dayOut'] = $dayOut;

        $rowNum++;

    }
}


var_dump($dayInArray);
var_dump($dayOutArray);

$rowDate = autoGenerateDates($dayInOutArray, $startdateInSeconds);


//$rowDate['dayIn'] = autoGenerateDates($dayInArray, $startdateInSeconds);
//$rowDate['dayOut'] = autoGenerateDates($dayOutArray, $startdateInSeconds);

var_dump($rowDate);

echo 'day of week today: ' . date('w', time());

var_dump(date('w', time()));

function calculateSeconds($numOfDays) {
    // days in seconds = 60 seconds * 60 minutes * 24 hours = 86400 seconds
    $secondsData = SEC_PER_DAY * $numOfDays;
    return $secondsData;
}

function convertToDateString($time) {
    return date('D M j', $time);
}

//function skipWeekends($time) {
//    $dayOfWeek = date('w', $time);
//    //if $dayOfWeek is Saturday or Sunday, then make $dayOfWeek Monday.
//    if($dayOfWeek == 6 || $dayOfWeek == 0 ) {
//        $dayOfWeek = 1;
//    }
//
//    return $dayOfWeek;
//}

function autoGenerateDates($daysArray, $startdate) {

    $dayIncrement = 0;

//    $startdateInSeconds = strtotime($_POST['sc-startdate']);

    foreach($daysArray as $key => $day) {

        $newDate = calculateSeconds($day) + $startdate + $dayIncrement;
        $dayOfWeek = date('w', $newDate);

        echo 'day of week' . $dayOfWeek .'<br>';

        if($dayOfWeek == 6) {
            $dayIncrement += (SEC_PER_DAY*2);
            $newDate = calculateSeconds($day) + $startdate + $dayIncrement;
        }
        else if($dayOfWeek == 0) {
            $dayIncrement += SEC_PER_DAY;
            $newDate = calculateSeconds($day) + $startdate + $dayIncrement;
        }


        $dateString = convertToDateString($newDate);
        $daysArray[$key] = $dateString;

//        var_dump($seconds);
//        var_dump($dateString);

    }
    return $daysArray;
}



?>